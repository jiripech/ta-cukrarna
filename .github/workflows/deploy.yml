name: Deploy Ta Cukrárna to VPS

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: ta-cukrarna-build
          path: |
            .next/
            public/
            package.json
            package-lock.json
          retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: ta-cukrarna-build

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Deploy to VPS
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_PATH: ${{ secrets.VPS_PATH }}
        run: |
          echo "🚀 Starting rsync deployment to VPS..."

          # Create backup on VPS first
          ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST << 'ENDSSH'
            if [ -d "$VPS_PATH/current" ]; then
              echo "📦 Creating backup..."
              cp -r "$VPS_PATH/current" "$VPS_PATH/backup-$(date +%Y%m%d-%H%M%S)" || true
            fi

            # Ensure target directory exists
            mkdir -p "$VPS_PATH/current"
          ENDSSH

          # Use rsync to efficiently transfer files
          echo "📤 Syncing files with rsync..."
          rsync -avz --delete \
            --exclude 'node_modules' \
            --exclude '.git' \
            --exclude '.next' \
            --exclude 'logs' \
            --exclude '*.log' \
            -e "ssh -o StrictHostKeyChecking=no" \
            ./ \
            $VPS_USER@$VPS_HOST:$VPS_PATH/current/

          # Execute deployment commands on VPS
          ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST << 'ENDSSH'
            cd $VPS_PATH/current

            echo "📦 Installing dependencies..."
            npm ci --only=production

            echo "🏗️ Building application..."
            npm run build

            echo "🔄 Restarting application..."
            # Restart PM2 application
            pm2 restart ta-cukrarna || pm2 start ecosystem.config.js

            # Reload PM2 configuration if ecosystem file changed
            pm2 reload ecosystem.config.js --update-env

            echo "✅ Deployment completed successfully!"
            echo "🌐 Application should be available at your domain"
          ENDSSH

          echo "🎉 Rsync deployment finished!"

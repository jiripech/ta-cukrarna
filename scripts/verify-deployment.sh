#!/bin/bash

# Deployment verification script
# Checks if production deployment matches expectations

set -e

echo "üîç Ta Cukr√°rna Deployment Verification"
echo "====================================="

# Configuration
PRODUCTION_URL="https://tacukrarna.cz"
LOCAL_VERSION=$(node -p "require('./package.json').version")

echo "üì¶ Local version: $LOCAL_VERSION"
echo "üåê Production URL: $PRODUCTION_URL"

# Test 1: Basic connectivity
echo ""
echo "üß™ Test 1: Basic connectivity..."
if curl -s -f "$PRODUCTION_URL" > /dev/null; then
    echo "‚úÖ Production site is accessible"
else
    echo "‚ùå Production site is not accessible"
    exit 1
fi

# Test 2: Check if deployment contains expected content
echo ""
echo "üß™ Test 2: Content verification..."
PROD_HTML=$(curl -s "$PRODUCTION_URL")

# Check for custom favicon
if echo "$PROD_HTML" | grep -q "icon.png"; then
    echo "‚úÖ Custom favicon detected"
else
    echo "‚ùå Custom favicon not found"
fi

# Check for dark mode script
if echo "$PROD_HTML" | grep -q "useDarkMode\|dark:"; then
    echo "‚úÖ Dark mode functionality detected"
else
    echo "‚ùå Dark mode functionality not found"
fi

# Check for optimized images
if echo "$PROD_HTML" | grep -q "sweetdream\|breakfast\|highprotein"; then
    echo "‚úÖ Optimized images detected"
else
    echo "‚ùå Optimized images not found"
fi

# Test 3: Performance check
echo ""
echo "üß™ Test 3: Performance check..."
RESPONSE_TIME=$(curl -o /dev/null -s -w '%{time_total}' "$PRODUCTION_URL")
if (( $(echo "$RESPONSE_TIME < 2.0" | bc -l) )); then
    echo "‚úÖ Response time OK: ${RESPONSE_TIME}s"
else
    echo "‚ö†Ô∏è  Slow response time: ${RESPONSE_TIME}s"
fi

# Test 4: Check for JavaScript errors (basic)
echo ""
echo "üß™ Test 4: JavaScript check..."
if echo "$PROD_HTML" | grep -q "_next/static"; then
    echo "‚úÖ Next.js static assets detected"
else
    echo "‚ùå Next.js static assets not found"
fi

echo ""
echo "‚úÖ Deployment verification completed!"
echo "üéâ Production deployment looks good!"
